ext {

    // android
    firebase_analytics_version      = '19.0.0'
    supported_android_version       = '1.2.0' //1.3.1 updates fragment-ktx to v1.3.6 (see issue below)
    legacy_support_android_version  = '1.0.0'
    constraint_layout_version       = '2.1.0'
    lifecycle_version               = '2.3.1'
    lifecycle_test_version          = '2.1.0'
    nav_version                     = '2.3.5'
    material_version                = '1.4.0'
    recyclerview_version            = '1.2.1'
    swipeview_version               = '1.1.0'
    fragment_version                = '1.3.6'

    dagger_version                  = '2.38.1'
    // com.google.dagger:dagger-android-support v2.33 updates androidx.fragment:fragment-ktx to v1.3.0
    // which creates issues with animations between fragments (e.g. Splash to Login and
    // Visa Transactions to Account detail) and shows the empty field error on Step 1 Login id
    // edit text upon loading screen. We have to wait until androidx.fragment:fragment-ktx has a
    // version that fixes the issue and we can then update both dagger_android_version and
    // fragment_version to the latest.
    // Update: still broken on fragment-ktx v1.4.0-alpha06
    dagger_android_version          = '2.38.1'
    gson_version                    = '2.8.7'
    retrofit_version                = '2.9.0'
    logging_interceptor_version     = '4.9.1'
    kotlin_coroutines_core_version  = '1.5.1'
    kotlin_coroutines_android_version   = '1.5.1'
    dynatrace_version               = '8.+'

    commons_io_version              = '2.11.0'
    commons_codec_version           = '1.15'

    threetenabp_version             = "1.3.1"

    shimmer_version                 = "0.5.0"

    // Tests
    junit_version                   = '4.13.2'
    runner_version                  = '1.4.0'
    espresso_version                = '3.4.0'
    mockito_version                 = "3.10.0"
    mockito_android_version         = "3.10.0"
    mock_retrofit_version           = "2.9.0"
    mock_server_version             = "4.9.1"
    coroutines_test_version         = "1.5.1"
    fragment_testing_version        = "1.3.6"
    test_rules_versions             = "1.4.0"
    junit_ext_version               = "1.1.2"
    ui_automator_version            = "2.2.0"
    threetenabp_test_version        = "1.5.1"
    mockito_kotlin_version          = "2.2.0"
    mockk_version                   = "1.11.0"
    reflect_version                 = "1.5.21"
    json_version                    = "20210307"

    core = [

        firebase_analytics:             "com.google.firebase:firebase-analytics:$firebase_analytics_version",

        // Dagger
        dagger:                         "com.google.dagger:dagger:$dagger_version",
        dagger_android_support:         "com.google.dagger:dagger-android-support:$dagger_android_version",
        dagger_compiler:                "com.google.dagger:dagger-compiler:$dagger_version",
        dagger_android_processor:       "com.google.dagger:dagger-android-processor:$dagger_version",

        // Utils
        gson:                           "com.google.code.gson:gson:$gson_version",
        threetenabp:                    "com.jakewharton.threetenabp:threetenabp:$threetenabp_version",
        dynatrace_agent:                "com.dynatrace.agent:agent-android:$dynatrace_version",

        // Retrofit
        retrofit:                       "com.squareup.retrofit2:retrofit:$retrofit_version",
        retrofit_converter_gson:        "com.squareup.retrofit2:converter-gson:$retrofit_version",

        // Http Logger
        http_logger:                    "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version",

        // kotlin
        kotlin:                         "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.32",
        kotlin_coroutines_core:         "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_core_version",
        kotlin_coroutines_android:      "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_android_version",

        // Needed for ThreatMetrix
        commons_io:                     "commons-io:commons-io:$commons_io_version",
        commons_codec:                  "commons-codec:commons-codec:$commons_codec_version",

    ]

    presentation = [

        supported_android:              "androidx.appcompat:appcompat:$supported_android_version",
        supported_legacy_android:       "androidx.legacy:legacy-support-v4:$legacy_support_android_version",
        constraint_layout:              "androidx.constraintlayout:constraintlayout:$constraint_layout_version",
        recyclerview:                   "androidx.recyclerview:recyclerview:$recyclerview_version",
        fragment:                       "androidx.fragment:fragment-ktx:$fragment_version",

        // lifecycle
        lifecycle_viewmodel:            "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
        lifecycle_compiler:             "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version",

        // Navigation
        navigation_fragment:            "androidx.navigation:navigation-fragment-ktx:$nav_version",
        navigation_ui:                  "androidx.navigation:navigation-ui-ktx:$nav_version",

        // for getting BottomNavigationView \\
        material:                       "com.google.android.material:material:$material_version",
        swipeView:                      "androidx.swiperefreshlayout:swiperefreshlayout:$swipeview_version",

        shimmer:                        "com.facebook.shimmer:shimmer:$shimmer_version"

    ]

    unitTesting = [

        junit: "junit:junit:$junit_version",
        mockito: "org.mockito:mockito-core:$mockito_version",

        androidx_testing: "androidx.arch.core:core-testing:$lifecycle_test_version",
        mock_retrofit: "com.squareup.retrofit2:retrofit-mock:$mock_retrofit_version",
        mock_server: "com.squareup.okhttp3:mockwebserver:$mock_server_version",
        coroutines_test: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version",
        mockitokotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version",
        threeten_test: "org.threeten:threetenbp:$threetenabp_test_version",
        mockk: "io.mockk:mockk:$mockk_version",
        reflect: "org.jetbrains.kotlin:kotlin-reflect:$reflect_version",
        json: "org.json:json:$json_version"
    ]

    uiTesting = [

        test_runner: "androidx.test:runner:$runner_version",
        espresso: "androidx.test.espresso:espresso-core:$espresso_version",
        fragment_testing: "androidx.fragment:fragment-testing:$fragment_testing_version",
        test_rules: "androidx.test:rules:$test_rules_versions",
        junit_ext: "androidx.test.ext:junit:$junit_ext_version",
        ui_automator: "androidx.test.uiautomator:uiautomator:$ui_automator_version",
        mockito_android: "org.mockito:mockito-android:$mockito_android_version",

        androidx_testing: "androidx.arch.core:core-testing:$lifecycle_test_version",
        coroutines_test: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"

    ]

}